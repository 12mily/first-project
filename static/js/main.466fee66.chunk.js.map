{"version":3,"sources":["api/api.js","assets/images/user.png","redux/dialogs-reducer.js","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/Users/users.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","backgroundColor","preloader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.466fee66.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"1862b57f-ba10-4c90-863a-11ce8db33f84\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1HDiy\",\"item\":\"Navbar_item__2c-ni\",\"activeLink\":\"Navbar_activeLink__2seke\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div className={styles.users}>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    {/*<span>*/}\r\n                    {/*    <div>{\"user.location.country\"}</div>*/}\r\n                    {/*    <div>{\"user.location.city\"}</div>*/}\r\n                    {/*</span>*/}\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport styles from \"./users.module.css\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div className={styles.users}>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/'\r\n                               render={ () => <Redirect to={'/profile'}/>}/>\r\n\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n\r\n                        <Route path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n\r\n                        <Route path='*'\r\n                               render={() => <div>404 not found</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__ox4le\",\"error\":\"FormsControls_error__cuq-a\",\"formSummaryError\":\"FormsControls_formSummaryError__5OT3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__65G6F\",\"users\":\"users_users__2rgc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3_sg4\",\"pageNumber\":\"Paginator_pageNumber__1v8u7\",\"selectedPage\":\"Paginator_selectedPage__35ZU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__lvUBR\",\"loginBlock\":\"Header_loginBlock__38DGn\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}